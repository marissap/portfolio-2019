{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","className","href","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","readingTime","frontmatter","description","excerpt","name","content","hardcodedImage","property","style","marginTop","rhythm","marginBottom","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"6FAAA,yBAsBeA,IApBH,WACV,OACE,yBAAKC,UAAU,WACb,4BAAI,0BAAMA,UAAU,8BAAhB,sJACJ,0HACA,wBAAIA,UAAU,gBACZ,wBAAIA,UAAU,eACZ,uBAAGC,KAAK,+BAAR,aAEF,wBAAID,UAAU,eACV,uBAAGC,KAAK,4CAAR,eAEJ,wBAAID,UAAU,eACV,uBAAGC,KAAK,gCAAR,kB,8LC4EGC,UAlFU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAgCR,EAAhCQ,SAAUC,EAAsBT,EAAtBS,KAAMC,EAAgBV,EAAhBU,YAIxB,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKS,YAAYJ,MACxBK,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,UAEpD,8BACE,0BAAMC,KAAK,eAAeC,QAAQ,YAClC,0BAAMD,KAAK,eAAeC,QAAQ,cAClC,0BAAMD,KAAK,gBAAgBC,QAASb,EAAKS,YAAYJ,QACrD,0BAAMO,KAAK,sBAAsBC,QAASb,EAAKS,YAAYC,cAC3D,0BAAME,KAAK,gBAAgBC,QAASC,mBACpC,0BAAMF,KAAK,QAAQC,QAASC,mBAC9B,0BAAMC,SAAS,WAAWF,QAASC,oBAEnC,iCACE,gCACE,wBACEE,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGfnB,EAAKS,YAAYJ,OAEpB,uBACEW,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAGtBlB,EAAKS,YAAYa,KAPpB,MAO6Bd,IAG/B,6BAASe,wBAAyB,CAAEC,OAAQxB,EAAKyB,QACjD,wBACET,MAAO,CACLG,aAAcD,YAAO,MAGzB,kCAIF,6BACE,wBACEF,MAAO,CACLK,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGvB,GACC,kBAAC,OAAD,CAAMwB,GAAIxB,EAASyB,OAAOC,KAAMC,IAAI,QAApC,KACK3B,EAASG,YAAYJ,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMuB,GAAIvB,EAAKwB,OAAOC,KAAMC,IAAI,QAC7B1B,EAAKE,YAAYJ,MADpB,WAaP,IAAM6B,EAAS","file":"component---src-templates-blog-post-js-442c3749ca01a0b99234.js","sourcesContent":["import React from \"react\"\n\nconst Bio = () => {\n  return (\n    <div className=\"bio-div\">\n      <h2><span className=\"dashed-underline-multiline\">I like breaking down complex problems and building from the ground-up to create human-centered systems and bring people together, on and offline.</span></h2>\n      <p>Currently working on video distribution at Twitch and studying computer science at uOttawa.</p>\n      <ul className=\"social-links\">\n        <li className=\"social-link\">\n          <a href=\"https://github.com/marissap\">↖︎github</a>\n        </li>\n        <li className=\"social-link\">\n            <a href=\"https://www.linkedin.com/in/marissaphul/\">↖︎linkedin</a>\n        </li>\n        <li className=\"social-link\">\n            <a href=\"https://twitter.com/os_maris\">↖︎twitter</a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport { hardcodedImage } from \"../../content/assets/blue-blob.png\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next, readingTime } = pageContext\n\n  // const hardcodedImage = \"content/assets/blue-blob.png\"\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <head>\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:site\" content=\"@os_maris\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.frontmatter.description} />\n        <meta name=\"twitter:image\" content={hardcodedImage} />\n        <meta name=\"image\" content={hardcodedImage} />\n\t\t    <meta property=\"og:image\" content={hardcodedImage} />\n      </head>\n      <article>\n        <header>\n          <h2\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0\n            }}\n          >\n            {post.frontmatter.title}\n          </h2>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date} - {readingTime}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description        \n      }\n    }\n  }\n`\n"],"sourceRoot":""}